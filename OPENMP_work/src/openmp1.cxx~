#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <omp.h>

/*
  OpenMP provides what's known as a "directives-based" sahred memory API. In C and C++, this means that ther are special preprocessor instrutions
  known as pragmas. Pragmas are typically added to a system to allow behaviours that aren't part of the basic C specification. 

  Compilers that dont support the pragmas are free to ignore them. This allows a program that uses the pragmas to run on platforms that
  don't support them.



 */
void Hello(void);

int main(int argc, char *argv[]) {
  int thread_count = strtol(argv[1], NULL, 10);
  
# pragma omp parallel num_threads(thread_count)
Hello();

 return 0;
}


void Hello(void) {
  int my_rank = omp_get_thread_num();
  int thread_count = omp_get_num_threads();
  std::cout << "Hello from thread " << my_rank  << " of " <<  thread_count << std::endl;
}
