#include <iostream>
#include <sstream>
#include <string>
#include <mpi.h>
#include <cstring>


const int MAX_STRING = 100;

int main(void) {
  char greeting[MAX_STRING];
  int comm_sz; // number of processes
  int my_rank;
  std::ostringstream out;
  
  MPI_Init(NULL,NULL);
  MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);
  MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);
  

  if (my_rank != 0) {    
    out << "Greetings from process "<< my_rank << " of " <<  comm_sz;
    std::cout << out.str() << std::endl;
    MPI_Send(greeting, strlen(greeting) + 1 , MPI_CHAR, 0, 0, MPI_COMM_WORLD);
  } else {
    out << "Greetings from process "<< my_rank << " of "  <<  comm_sz;
    std::cout << out.str() << std::endl;
    for (int q = 1; q < comm_sz; q++) {
      MPI_Recv(greeting, MAX_STRING, MPI_CHAR, q, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
    }
  }
  MPI_Finalize();
  
  return 0;
  
}
